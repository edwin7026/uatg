[utg]

# [info, error, debug] set verbosity level to view different levels of messages.
verbose = info
# [True, False] the clean flag removes unnecessary files from the previous runs and cleans directories
clean = False

# Enter the modules whose tests are to be generated/validated in comma separated format.
# Run 'utg --list-modules to find all the modules that are supported. '
# Use 'all' to generate/validate all modules
modules = all

# Absolute path of the uarch_modules/modules Directory
module_dir = uarch_modules/modules
# Directory to dump assembly files and reports
work_dir = work
# location to store the link.ld linker file. By default it's same as work_dir
linker_dir = work

# Path of the yaml file containing DUT Configuration.
# By default the configuration is "utg/target/dut_config.yaml"
dut_config = target/dut_config.yaml
# Absolute Path of the yaml file containing the signal aliases of the DUT
# presently it is stored in 'uarch_modules/aliasing.yaml'
alias_file = uarch_modules/aliasing.yaml

# [True, False] If the gen_test_list flag is True, the test_list.yaml needed for running tests in river_core are generated automatically.
# Until you want to validate individual tests in river_core set the flag to True
gen_test_list = True
# [True, False] If the gen_test flag is True, assembly files are generated/overwritten
gen_test = False
# [True, False] If the val_test flag is True, assembly files are executed and the modules are validated
val_test = False
# [True, False] If the gen_cvg flag is True, System Verilog cover-groups are generated
gen_cvg = False

# list_modules = False


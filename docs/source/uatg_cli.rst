.. See LICENSE.incore for details

.. highlight:: shell

.. _uatg_cli:

#################
UATG CLI Commands
#################

===============
``uatg --help``
===============

.. code-block:: shell-session

    $ uatg --help
    Usage: uatg [OPTIONS] COMMAND [ARGS]...

    RISC-V Micro-Architectural Test Generator

    Options:
      --version  Show the version and exit.
      --help     Show this message and exit.

    Commands:
      clean         Removes ASM, SV and other generated files from the work...
      from-config   This subcommand reads parameters from config.ini and runs...
      generate      Generates tests, cover-groups for a list of modules...
      list-modules  Provides the list of modules supported from the module_dir...
      setup         Setups template files for config.ini, dut_config.yaml and...
      validate    validate

This is the help section which describes all the subcommands present in the UATG 
framework. The description for all the subcommands are presented in the table.

.. tabularcolumns:: |l|L|

.. table:: UATG Subcommands

  =================== =========================================================
  Parameter           Description
  =================== =========================================================
  clean               Subcommand to clean the files created duting test
                      generation. Clean will clean up all files, including the 
                      tests.
  from-config         Runs the UATG from the config.ini file which contains all 
                      the parameters required.
  generate            Subcommand to generate tests based on the arguments passed
                      along with this command. 
  list-modules        Subcommand to list all the DUT modules for which test
                      classes are present.
  setup               Subcommand to create template dut_config, aliasing as well 
                      as config file for the user to edit.
  validate            Subcommand to run the check logs feature in UATG.  
  =================== =========================================================

==========================================
Common Options present in UATG Subcommands
==========================================

The table that follows discusses about all the options present in the previously
shown 6 subcommands of UATG. 

The first column lists the option. The second column indicates which subcommands 
support said option. It is followed by the description in the third column.

.. tabularcolumns:: |l|l|l|L|

.. table:: Common Options in UATG Subcommands 

  ======================= ================ ========== ==================================================================
  Option                  UATG Subcommand  Required?  Description
  ======================= ================ ========== ==================================================================
  -v, \\-\\-verbose       generate, clean, Optional   The verbosity of the log generated by the tool.
                          validate, 
                          from-config,
                          list-modules
  -m, \\-\\-modules       generate,        Required   The Modules of the DUT for which you wish to generate the 
                          validate                    tests. (will take multiple values)
  -md, \\-\\-module_dir   generate, clean, Required   **Absolute/relative** path to the directory where the user has 
                          validate,                   saved the tests for all modules.
                          list-modules
  -wd, \\-\\-work_dir     generate, clean, Required   The workdir where all of the files, reports and logs are 
                          validate                    generated.
  -ld, \\-\\-linker_dir   generate,        Optional   The directory where the user has stored his ``link.ld`` file.
                                                      If not specified, UATG will generate a linker at the work_dir.
  -dc, \\-\\-dut_config   generate,        Required   The **absolute/relative** path to the ``dut_config.yaml`` file of 
                          validate                    the DUT for which the user wants to generate tests. 
  -af, \\-\\-alias_file   generate         Required   The **absolute/relative** path to the ``aliasing.yaml`` file of 
                                                      the DUT for which the user wants to generate covergroups.       
  -t, \\-\\-gen_test_list generate         Optional   [Flag] Creates a ``test_list.yaml`` file in the 
                                                      ``work_dir``.
  -gc, \\-\\-gen_cvg      generate         Optional   [Flag] When True, UATG will generate the covergroups for 
                                                      the tests.
  --version               generate, clean, Optional   Prints the version of UATG and exits.
                          validate
                          list-modules
  --help                  generate, clean, Optional   Prints the help section and exits.
                          validate, setup,
                          list-modules,
                          from-config
  -dp, \\-\\-dut_path     setup            Optional   The **absolute/relative** path to the directory where template
                                                      ``dut_onfig.yaml`` is to be created.
  -cp, \\-\\-config_path  setup            Optional   The **absolute/relative** path to the directory where template
                                                      ``config.ini`` is to be created.
  -ap, \\-\\-alias_path   setup            Optional   The **absolute/relative** path to the directory where template
                                                      ``aliasing.yaml`` is to be created.
  -c, \\-\\-config_file   from-config      Required   **Absolute/relative** path to the ``config.ini`` file.
  ======================= ================ ========== ==================================================================

=====================
``uatg setup --help``
=====================

.. code-block:: shell-session

    $ uatg setup --help
    Usage: uatg setup [OPTIONS]

      Setups template files for config.ini, dut_config.yaml and aliasing.yaml.
      Optionally you can provide the path's for each of them. If not specified
      files will be written to default paths.

      Optional: -dp, --dut_path;  -ap, --alias_path; -cp, --config_path

    Options:
      -dp, --dut_path PATH     Directory to store the dut_config.yaml file
      -ap, --alias_path PATH   Directory to store the aliasing.yaml file
      -cp, --config_path PATH  Directory to store the config.ini file
      --help                   Show this message and exit.
    
The setup command will create template configuration files in the directory the 
user passes. These template files can be edited by the user to meet his needs.

========================
``uatg generate --help``
========================

.. code-block:: shell-session

    $ uatg generate --help
    Usage: uatg generate [OPTIONS]

    Generates tests, cover-groups for a list of modules corresponding to the
    DUT defined in dut_config inside the work_dir. Can also generate the
    test_list needed to execute them on RiverCore.

    Requires: -dc, --dut_config, -md, --module_dir; -wd, --work_dir

    Depends : (-gc, --gen_cvg -> -af, --alias_file)

    Optional: -gc, --gen_cvg; -t, --gen_test_list; -ld, --linker_dir;

              -m, --modules; -v, --verbose

    Options:
      -v, --verbose [info|error|debug]
                                      Set verbose level for debugging
      -m, --modules TEXT              Enter a list of modules as a string in a
                                      comma separated format.
                                      default-all
      -wd, --work_dir PATH            Path to the working directory where
                                      generated files will be stored.  [required]
      -ld, --linker_dir PATH          Path to the directory containing the linker
                                      file.Work Directory is Chosen for linker if
                                      this argument is empty
      -t, --gen_test_list             Set this flag if a test-list.yaml is to be
                                      generated by uatg. uatg does not generate the
                                      test_list by default.
      -gc, --gen_cvg                  Set this flag to generate the Covergroups
      -md, --module_dir PATH          Absolute Path to the directory containing
                                      the python files which generates the
                                      assembly tests. Required Parameter
                                      [required]
      -dc, --dut_config PATH          Path to the yaml file containing DUT
                                      configuration. Needed to generate/validate
                                      tests  [required]
      -af, --alias_file PATH          Path to the aliasing file containing
                                      containing BSV alias names.
      --version                       Show the version and exit.
      --help                          Show this message and exit.

The generate command is the main command of UATG. It will find the test classes 
and then generate the Assembly test files to be run on the DUT. 

The user can also choose to generate the covergroups by passing the ``gen_cvg``
option. In addition to that, the user can selectively generate tests using the 
``modules`` option. 

===========================
``uatg from-config --help``
===========================

.. code-block:: shell-session

    $ uatg from-config --help
    Usage: uatg from-config [OPTIONS]

      This subcommand reads parameters from config.ini and runs uatg based on the
      values.

      Optional: -c, --config

    Options:
      -v, --verbose [info|error|debug]
                                      Set verbose level for debugging
      -c, --config_file PATH          Provide a config.ini file's path. This runs
                                      uatg based upon the parameters stored in the
                                      file. If not specified individual args/flags
                                      are to be passed through cli. In thecase of
                                      conflict between cli and config.ini values,
                                      config.ini values will be chosen
      --help                          Show this message and exit.
    
UATG also provides the option to be run from a single config file instead of
using the subcommands every time. The from-config command is for that purpose.

Once the user sets up a ``config.ini`` file with all the required parameters,
they can run UATG using the *from-config* command. Here the ``-c`` option should
point to the configured *config.ini*.

.. note:: The user can refer the UATG Configuration files section to learn more about
   setting up the config.ini file.

========================
``uatg validate --help``
========================

.. code-block:: shell-session

    $ uatg validate --help
    Usage: uatg validate [OPTIONS]

    Options:
      -v, --verbose [info|error|debug]
                                      Set verbose level for debugging
      -m, --modules TEXT              Enter a list of modules as a string in a
                                      comma separated format.
                                      default-all
      -wd, --work_dir PATH            Path to the working directory where
                                      generated files will be stored.
      -md, --module_dir PATH          Absolute Path to the directory containing
                                      the python files which generate the assembly
                                      tests. Required Parameter
      -dc, --dut_config PATH          Path to the yaml file containing DUT
                                      configuration. Needed to generate/validate
                                      tests
      --version                       Show the version and exit.
      --help                          Show this message and exit.
    
The validate subcommand is an added optional feature of UATG. If the user 
precisely knows the pattern to search for in the log generated by running his 
test on the DUT, he can create a regular expression for the same and store it in 
the *regex_formats.py* file. He may then import those patterns within the
test_class and use the ``check_logs()`` method of the class to perform a regular
expression matching using UATG. This will increase (to some extent) the confidence 
of the tests, and also requires lesser time when compared to SV based methods.

The user should pass the required methods for UATG to perform log checking
automatically. 

============================
``uatg list-modules --help``
============================

.. code-block:: shell-session

    $ uatg list-modules --help
    Usage: uatg list-modules [OPTIONS]

      Provides the list of modules supported from the module_dir

      Requires: -md, --module_dir

    Options:
      -md, --module_dir PATH          Absolute Path to the directory containing
                                      the python files which generates the
                                      assembly tests. Required Parameter
                                      [required]
      -v, --verbose [info|error|debug]
                                      Set verbose level for debugging
      --version                       Show the version and exit.
      --help                          Show this message and exit.
    
The list-modules command is used when the user is not sure about the modules 
for which test_classes exist. As UATG will exit if a module for which no test
classes were created, it is necessary that the user specifies the right 
modules. 

=====================
``uatg clean --help``
=====================

.. code-block:: shell-session

    $ uatg clean --help
    Usage: uatg list-modules [OPTIONS]

      Provides the list of modules supported from the module_dir
    
      Requires: -md, --module_dir

    Options:
      -md, --module_dir PATH          Absolute Path to the directory containing
                                      the python files which generate the assembly
                                      tests. Required Parameter  [required]
      -v, --verbose [info|error|debug]
                                      Set verbose level for debugging
      --version                       Show the version and exit.
      --help                          Show this message and exit.
      

The clean command is used to remove the files generated by UATG. It cleans the
entire work_directory, removes the __pycache__ files and also removes the 
.yapsyplugin files created during test generation/validation.

.. See LICENSE.incore for details

.. highlight:: shell

.. _utg_cli:

################
UTG CLI Commands
################

==============
``utg --help``
==============

.. code-block:: shell-session

    $ utg --help
    Usage: utg [OPTIONS] COMMAND [ARGS]...

    RISC-V Micro-Architectural Test Generator

    Options:
    --version  Show the version and exit.
    --help     Show this message and exit.

    Commands:
    clean         Removes ASM, SV and other generated files from the work...
    from-config   This subcommand reads parameters from config.ini and runs...
    generate      Generates tests, cover-groups for a list of modules...
    list-modules  Provides the list of modules supported from the module_dir...
    setup         Setups template files for config.ini, dut_config.yaml and...
    validate
 

====================
``utg setup --help``
====================

.. code-block:: shell-session

    $ utg setup --help
    Usage: utg setup [OPTIONS]

      Setups template files for config.ini, dut_config.yaml and aliasing.yaml.
      Optionally you can provide the path's for each of them. If not specified
      files will be written to default paths.

      Optional: -dp, --dut_path;  -ap, --alias_path; -cp, --config_path

    Options:
      -dp, --dut_path PATH     Directory to store the dut_config.yaml file
      -ap, --alias_path PATH   Directory to store the aliasing.yaml file
      -cp, --config_path PATH  Directory to store the config.ini file
      --help                   Show this message and exit.
   

=======================
``utg generate --help``
=======================

.. code-block:: shell-session

    $ utg generate --help
    Usage: utg generate [OPTIONS]

    Generates tests, cover-groups for a list of modules corresponding to the
    DUT defined in dut_config inside the work_dir. Can also generate the
    test_list needed to execute them on RiverCore.

    Requires: -dc, --dut_config, -md, --module_dir; -wd, --work_dir

    Depends : (-gc, --gen_cvg -> -af, --alias_file)

    Optional: -gc, --gen_cvg; -t, --gen_test_list; -ld, --linker_dir;

              -m, --modules; -v, --verbose

    Options:
      -v, --verbose [info|error|debug]
                                      Set verbose level for debugging
      -m, --modules TEXT              Enter a list of modules as a string in a
                                      comma separated format.
                                      --module
                                      'branch_predictor, decoder'
                                      Here decoder and
                                      branch_predictor are chosen
                                      If all module
                                      are to be selected use keyword 'all'.
                                      Presently supportedmodules are:
                                      branch_predictor
      -wd, --work_dir PATH            Path to the working directory where
                                      generated files will be stored.  [required]
      -ld, --linker_dir PATH          Path to the working directory where
                                      generated files will be stored.
      -t, --gen_test_list             Set this flag if a test-list.yaml is to be
                                      generated by utg. utg does not generate the
                                      test_list by default.
      -gc, --gen_cvg                  Set this flag to generate the Covergroups
      -md, --module_dir PATH          Absolute Path to the directory containing
                                      the python files which generate the assembly
                                      tests. Required Parameter  [required]
      -dc, --dut_config PATH          Path to the yaml file containing DUT
                                      configuration. Needed to generate/validate
                                      tests  [required]
      -af, --alias_file PATH          Path to the aliasing file containing
                                      containing BSV alias names.
      --version                       Show the version and exit.
      --help                          Show this message and exit.


==========================
``utg from-config --help``
==========================

.. code-block:: shell-session

    $ utg from-config --help
    Usage: utg from-config [OPTIONS]

      This subcommand reads parameters from config.ini and runs utg based on the
      values.

      Optional: -c, --config

    Options:
      -v, --verbosity [info|error|debug]
                                      Set verbose level for debugging
      -c, --config_file PATH          Provide a config.ini file's path. This runs
                                      utg based upon the parameters stored in the
                                      file. If not specified individual args/flags
                                      are to be passed through cli. In thecase of
                                      conflict between cli and config.ini values,
                                      config.ini values will be chosen
      --help                          Show this message and exit.
   

=======================
``utg validate --help``
=======================

.. code-block:: shell-session

    $ utg validate --help
    Usage: utg validate [OPTIONS]

    Options:
      -v, --verbose [info|error|debug]
                                      Set verbose level for debugging
      -m, --modules TEXT              Enter a list of modules as a string in a
                                      comma separated format.
                                      --module
                                      'branch_predictor, decoder'
                                      Here decoder and
                                      branch_predictor are chosen
                                      If all module
                                      are to be selected use keyword 'all'.
                                      Presently supportedmodules are:
                                      branch_predictor
      -wd, --work_dir PATH            Path to the working directory where
                                      generated files will be stored.
      -md, --module_dir PATH          Absolute Path to the directory containing
                                      the python files which generate the assembly
                                      tests. Required Parameter
      -dc, --dut_config PATH          Path to the yaml file containing DUT
                                      configuration. Needed to generate/validate
                                      tests
      --version                       Show the version and exit.
      --help                          Show this message and exit.
      

===========================
``utg list-modules --help``
===========================

.. code-block:: shell-session

    $ utg list-modules --help
    Usage: utg list-modules [OPTIONS]

      Provides the list of modules supported from the module_dir

      Requires: -md, --module_dir

    Options:
      -md, --module_dir PATH          Absolute Path to the directory containing
                                      the python files which generate the assembly
                                      tests. Required Parameter  [required]
      -v, --verbose [info|error|debug]
                                      Set verbose level for debugging
      --version                       Show the version and exit.
      --help                          Show this message and exit.


====================
``utg clean --help``
====================

.. code-block:: shell-session

    $ utg clean --help
    Usage: utg clean [OPTIONS]

      Removes ASM, SV and other generated files from the work directory, and
      removes .yapsy plugins from module directory.

      Requires: -wd, --work_dir

      Optional: -md, --module_dir; -v, --verbose

    Options:
      -v, --verbose [info|error|debug]
                                      Set verbose level for debugging
      -wd, --work_dir PATH            Path to the working directory where
                                      generated files will be stored.  [required]
      -md, --module_dir PATH          Absolute Path to the directory containing
                                      the python files which generate the assembly
                                      tests. Required Parameter
      --version                       Show the version and exit.
      --help                          Show this message and exit.
    


